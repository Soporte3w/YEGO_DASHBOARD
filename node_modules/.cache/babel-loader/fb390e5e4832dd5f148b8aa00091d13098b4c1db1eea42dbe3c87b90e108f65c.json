{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth debe ser usado dentro de un AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{// Siempre pedir login al cargar la aplicación\nsetIsAuthenticated(false);setIsLoading(false);},[]);const login=()=>{setIsAuthenticated(true);// No guardar en localStorage para que siempre pida login\n};const logout=()=>{setIsAuthenticated(false);// No es necesario remover de localStorage\n};const value={isAuthenticated,isLoading,login,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","login","logout","value","Provider"],"sources":["C:/Users/Giomar/Desktop/DashboardWeb/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Siempre pedir login al cargar la aplicación\r\n    setIsAuthenticated(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = () => {\r\n    setIsAuthenticated(true);\r\n    // No guardar en localStorage para que siempre pida login\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsAuthenticated(false);\r\n    // No es necesario remover de localStorage\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    isLoading,\r\n    login,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAO,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,WAAW,CAAC,CACvC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,kDAAkD,CAAC,CACrE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACd;AACAW,kBAAkB,CAAC,KAAK,CAAC,CACzBE,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClBH,kBAAkB,CAAC,IAAI,CAAC,CACxB;AACF,CAAC,CAED,KAAM,CAAAI,MAAM,CAAGA,CAAA,GAAM,CACnBJ,kBAAkB,CAAC,KAAK,CAAC,CACzB;AACF,CAAC,CAED,KAAM,CAAAK,KAAK,CAAG,CACZN,eAAe,CACfE,SAAS,CACTE,KAAK,CACLC,MACF,CAAC,CAED,mBACEb,IAAA,CAACC,WAAW,CAACc,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAP,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}